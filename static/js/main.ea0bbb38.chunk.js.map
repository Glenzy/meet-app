{"version":3,"sources":["Event.js","EventList.js","mock-data.js","api.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","this","props","event","summary","location","start","htmlLink","description","eventStart","moment","dateTime","toDate","className","onClick","setState","href","target","rel","dangerouslySetInnerHTML","__html","Component","EventList","events","map","key","id","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","extractLocations","extractLocatins","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","startsWith","done","locations","getAccessToken","token","url","axios","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","CitySearch","query","suggestions","showSuggestions","handleInputChanged","value","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","NumberOfEvents","numberOfEvents","infoText","App","currentLocation","eventCount","response","slice","mounted","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ea0bbb38.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Event extends Component {\n  state = {\n    showDetails: false,\n  };\n\n  // can no longer show the people coming count\n  /*   const event = this.props.event;\n  const data = [\n    { name: 'people coming', value: event.yes_rsvp_count },\n    { name: 'open slots', value: event.rsvp_limit - event.yes_rsvp_count },\n  ]; */\n  //const colors = ['#8884d8', '#37c0ba'];\n  render() {\n    const {\n      summary,\n      location,\n      start,\n      htmlLink,\n      description,\n    } = this.props.event;\n    const eventStart = moment(start.dateTime, 'YYYY-MM-DD HH:mm').toDate();\n    const { showDetails } = this.state;\n    return (\n      <div className='event'>\n        <div className='event__Overview'>\n          <h2 className='event__Overview--name'>{summary}</h2>\n          <p className='event__Overview--localDate'>{`${eventStart}`}</p>\n          {location && (\n            <p className='event__Overview--venue'>\n              @{summary} | {location}\n            </p>\n          )}\n          {showDetails && (\n            <button\n              className='details-btn'\n              onClick={() => this.setState({ showDetails: !showDetails })}\n            >\n              hide details\n            </button>\n          )}\n          {!showDetails && (\n            <button\n              className='details-btn'\n              onClick={() => this.setState({ showDetails: !showDetails })}\n            >\n              show details\n            </button>\n          )}\n        </div>\n        {showDetails && (\n          <div className='event__Details'>\n            <h3>About event:</h3>\n            <h4>\n              <a href={htmlLink} target='_blank' rel='noopener noreferrer'>\n                See details on Google Calendar\n              </a>\n            </h4>\n            <p\n              className='event__Details--description'\n              dangerouslySetInnerHTML={{ __html: description }}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    return (\n      <ul className='EventList'>\n        {this.props.events.map(event =>\n          <li key = {event.id}>\n            <Event event={event} />\n          </li>\n        )}\n\n      </ul>\n    );\n  }\n}\nexport default EventList;\n","const mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200622T120000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA2MjJUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description:\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-06-22T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-06-22T15:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-06-22T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200623T140000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA2MjNUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description:\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-06-23T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-06-23T17:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-06-23T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n];\nexport { mockData };\n","import axios from 'axios';\nimport NProgress from 'nprogress';\nimport { mockData } from './mock-data';\n/**\n *\n * @param {*} events:\n * The following function is to be in api.js.\n * This function takes an events array, then uses map to create a new array with only locations.\n * Lastly, we remove all duplicates by creating another new array by using the spread operator and spreading a Set.\n * The Set removes all duplicates from the array\n */\nexport const extractLocations = (events) => {\n  var extractLocatins = events.map((event) => event.location);\n  var locations = [...new Set(extractLocatins)];\n  return locations;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return { events: mockData, locations: extractLocations(mockData) };\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}/32`;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return { events: result.data.events, locations };\n  }\n};\n\nconst getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(\n        'https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url'\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nexport const getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://f1k17pnw2a.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    locations: this.props.locations,\n    query: '',\n    suggestions: [],\n    showSuggestions:false\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({showSuggestions:true});\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n\n    return this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions:false\n    });\n    this.props.updateEvents(suggestion);\n  };\n\n  render() {\n    return (\n      <div className='CitySearch'>\n        <input\n          type='text'\n          className='city'\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n        />\n        <ul\n          className={\n            this.state.showSuggestions ? 'suggestions showSuggestions' : 'display-none'\n          }\n        >\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li onClick={() => this.handleItemClicked('all')}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from 'react';\n//import { ErrorAlert } from './Alert';\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.props.updateEvents(null, value);\n    this.setState({ numberOfEvents: value });\n\n    if (value < 1) {\n      this.setState({\n        infoText: 'Select number from 1 to 32',\n      });\n    } else {\n      this.setState({\n        infoText: '',\n      });\n    }\n  };\n\n  render() {\n    const { numberOfEvents } = this.state;\n    return (\n      <div className='numberOfEvents'>\n        <label>Number of Events: </label>\n        <input\n          type='text'\n          id='numberOfEvents__input'\n          value={numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport { getEvents } from './api';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\n\nclass App extends Component {\n  state = {\n    events: [],\n    currentLocation: 'all',\n    locations: [],\n    numberOfEvents: 32,\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((response) => {\n      if(this.mounted) {\n      this.setState({ events: response.events, locations: response.locations });\n      }\n    });\n  }\n  \n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((response) => {\n        const locationEvents =\n          location === 'all'\n            ? response.events\n            : response.events.filter((event) => event.location === location);\n        const events = locationEvents.slice(0, numberOfEvents);\n        return this.setState({\n          events: events,\n          currentLocation: location,\n        });\n      });\n    } else {\n      getEvents().then((response) => {\n        const locationEvents =\n          currentLocation === 'all'\n            ? response.events\n            : response.events.filter(\n                (event) => event.location === currentLocation\n              );\n        const events = locationEvents.slice(0, eventCount);\n        return this.setState({\n          events: events,\n          numberOfEvents: eventCount,\n        });\n      });\n    }\n  }; \n  \n  render() {\n    return (\n      <div className='App'>\n        <CitySearch updateEvents={this.updateEvents} locations={this.state.locations} />\n        <NumberOfEvents\n          updateEvents={this.updateEvents}\n          numberOfEvents={this.state.numberOfEvents}\n        />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}